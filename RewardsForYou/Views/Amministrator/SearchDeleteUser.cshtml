@model RewardsForYou.Models.SearchDeleteUser


    <style>
        #myBtn {
            display: none;
            position: fixed;
            bottom: 15px;
            right: 30px;
            z-index: 99;
            font-size: 18px;
            border: none;
            outline: none;
            background-color: red;
            color: white;
            cursor: pointer;
            padding: 15px;
            border-radius: 4px;
        }

            #myBtn:hover {
                background-color: #0000ff;
            }

        input[type=text] {
            width: 200px;
            box-sizing: border-box;
            border: 2px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
            background-color: white;
            background-image: url('searchicon.png');
            background-position: 10px 10px;
            background-repeat: no-repeat;
            padding: 12px 20px 12px 40px;
            -webkit-transition: width 0.4s ease-in-out;
            transition: width 0.4s ease-in-out;
        }

            input[type=text]:focus {
                width: 100%;
            }

    </style>

<h2>Search and Delete Users</h2>

@using (Html.BeginForm())
{

    <div class="form-horizontal">
        <h4>Search Users</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Serial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Serial, new { htmlAttributes = new { type = "text", name = "search", placeholder = "Search.." ,@class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Serial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { type = "text", name = "search", placeholder = "Search..", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" onclick="CheckUser()" class="btn btn-default" />
            </div>
        </div>
    </div>



}


<div class="container">
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title">
                    <a data-toggle="collapse" href="#collapse1" class="list-group-item active" align="center">List's Users</a>
                </h4>
            </div>
            <div id="collapse1" class="panel-collapse collapse">
                <div class="panel-body">
                    <div class="container-fluid">
                        <div class="container-fluid" id="SearchViewContainer" style="margin-top:5px;overflow-x:auto;width:100%;">
                            @{Html.RenderPartial("_SearchDelete", Model.Lista);}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<div>
    @Html.ActionLink("Back to List", "Index")"
    <button align="rigth" onclick="topFunction()" id="myBtn" title="Go to top">Su</button>
</div>

<script type="text/javascript">

    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function () { scrollFunction() };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("myBtn").style.display = "block";
        } else {
            document.getElementById("myBtn").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }



    function CheckUser() {
        var Data = {
            Serial: $('#Serial').val(),
            Name: $('#Name').val(),
            Surname: $('#Surname').val(),
            EMail: $('#EMail').val()
        };

            console.log("ok");
            $.ajax({
                type: "POST",
                url: "@Url.Action("TakeJsonUsers", "Amministrator")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(Data),
                success: function (data) {
                    alert(data.message);
                    window.location.href = '@Url.Action("SearchDeleteUser", "Amministrator")/';
                },
                failure: function () {
                    alert("The call is failed");
                }
            });
        }

</script>
