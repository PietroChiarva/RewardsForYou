@model RewardsForYou.Models.Tasks


    

    <div class="form-horizontal">
        <h4>Tasks</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new {type="date",@class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Points, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-default" onclick="InsertTask()">Insert</a>
            </div>
        </div>
    </div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script type="text/javascript">

        function InsertTask() {
            //creo l'oggetto associando le variabili
            var DatiTask = {
                TaskID: $('#TaskID').val(),
                Type: $('#Type').val(),
                Description: $('#Description').val(),
                ExpiryDate: $('#ExpiryDate').val(),
                Points: $('#Points').val(),
            };

            //chiamata ajax
            $.ajax({
                //imposto il tipo di invio dati (GET O POST)
                type: "POST",
                //Dove devo inviare i dati recuperati dal form?
                url: "@Url.Action("JsonAddTask", "Amministrator")",
                //Quali dati devo inviare? e che tipo
                data: DatiTask,
                success: function (data) {
                    alert(data.messaggio);
                    if (data.flag == true) {
                        window.location.reload();
                    }
                },
                error: function () {
                    alert("Chiamata fallita, riprova");
                    //sempre meglio impostare una callback in caso di fallimento
                }

            });
        };

</script>


